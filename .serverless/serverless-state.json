{
  "service": {
    "service": "app",
    "serviceObject": {
      "name": "app"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "architecture": "arm64",
      "logRetentionInDays": 14,
      "region": "us-east-1",
      "stage": "stg",
      "stackName": "app-stg",
      "deploymentBucket": "app-stg-us-east-1-deployment-bucket",
      "environment": {
        "DOMAIN_NAME": "app-stg.matthewcomins.com",
        "HOSTED_ZONE": "matthewcomins.com"
      },
      "httpApi": {
        "disableDefaultEndpoint": false,
        "payload": "1.0"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "ssm:GetParameter"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "stackTags": {
        "SERVICE": "app",
        "STAGE": "stg"
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "app-stg-us-east-1-deployment-bucket",
        "serverSideEncryption": "AES256"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/app-stg-app",
              "RetentionInDays": 14
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "app",
                        "stg",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-stg*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-stg*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "app",
                    "stg",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "app-stg-us-east-1-deployment-bucket",
                "S3Key": "serverless/app/stg/1726503254510-2024-09-16T16:14:14.510Z/app.zip"
              },
              "Handler": "src/index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "app-stg-app",
              "MemorySize": 2048,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DOMAIN_NAME": "app-stg.matthewcomins.com",
                  "HOSTED_ZONE": "matthewcomins.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "AppLambdaVersionO6lZuUSlzxWXy4WnafNtzzCNNL4TKyv6bpm81mME": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "SARmrwZGlK1+fcRzQlntmsn8fFAk0xgyWeziJj2mHCo="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "stg-app",
              "ProtocolType": "HTTP",
              "DisableExecuteApiEndpoint": false
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "AppLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "1.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDefault": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "$default",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApp"
          },
          "APIGatewayDomainName": {
            "Type": "AWS::ApiGatewayV2::DomainName",
            "Properties": {
              "DomainName": "app-stg.matthewcomins.com",
              "DomainNameConfigurations": [
                {
                  "EndpointType": "REGIONAL",
                  "CertificateArn": "arn:aws:acm:us-east-1:652325596088:certificate/a75cb789-3935-46cd-91ec-5fb37d59fa9b"
                }
              ]
            }
          },
          "APIGatewayDomainMapping": {
            "Type": "AWS::ApiGatewayV2::ApiMapping",
            "Properties": {
              "DomainName": "app-stg.matthewcomins.com",
              "ApiId": {
                "Ref": "HttpApi"
              },
              "Stage": {
                "Ref": "HttpApiStage"
              }
            },
            "DependsOn": [
              "APIGatewayDomainName",
              "HttpApiStage"
            ]
          },
          "Route53HealthCheck": {
            "Type": "AWS::Route53::HealthCheck",
            "Properties": {
              "HealthCheckConfig": {
                "Port": 443,
                "Type": "HTTPS",
                "ResourcePath": "/health",
                "FullyQualifiedDomainName": "app-stg.matthewcomins.com",
                "RequestInterval": 30,
                "FailureThreshold": 1
              },
              "HealthCheckTags": [
                {
                  "Key": "Name",
                  "Value": "app-stg"
                }
              ]
            }
          },
          "Route53RecordSet": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
              "HealthCheckId": {
                "Ref": "Route53HealthCheck"
              },
              "HostedZoneName": "matthewcomins.com.",
              "Name": "app-stg.matthewcomins.com",
              "Region": "us-east-1",
              "ResourceRecords": [
                {
                  "Fn::GetAtt": [
                    "APIGatewayDomainName",
                    "RegionalDomainName"
                  ]
                }
              ],
              "SetIdentifier": "app-stg-latency",
              "TTL": 30,
              "Type": "CNAME"
            }
          },
          "S3Github": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
              "BucketName": "app-stg-us-east-1-github-bucket"
            }
          },
          "S3GithubPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "S3Github"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Effect": "Allow",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": {
                      "Fn::GetAtt": [
                        "S3Github",
                        "Arn"
                      ]
                    },
                    "Principal": "*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "app-stg-us-east-1-deployment-bucket",
            "Export": {
              "Name": "sls-app-stg-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionO6lZuUSlzxWXy4WnafNtzzCNNL4TKyv6bpm81mME"
            },
            "Export": {
              "Name": "sls-app-stg-AppLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-app-stg-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-app-stg-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "domainName": "app-stg.matthewcomins.com",
      "domainNameRegional": "app-stg-us-east-1.matthewcomins.com",
      "hostedZone": "matthewcomins.com"
    },
    "plugins": [
      "serverless-deployment-bucket",
      "serverless-build-client",
      "serverless-plugin-common-excludes"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "src/index.handler",
        "memorySize": 2048,
        "timeout": 30,
        "events": [
          {
            "httpApi": "*",
            "resolvedMethod": "ANY"
          }
        ],
        "name": "app-stg-app",
        "package": {},
        "memory": 2048,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersionO6lZuUSlzxWXy4WnafNtzzCNNL4TKyv6bpm81mME"
      }
    },
    "resources": {
      "Resources": {
        "APIGatewayDomainName": {
          "Type": "AWS::ApiGatewayV2::DomainName",
          "Properties": {
            "DomainName": "app-stg.matthewcomins.com",
            "DomainNameConfigurations": [
              {
                "EndpointType": "REGIONAL",
                "CertificateArn": "arn:aws:acm:us-east-1:652325596088:certificate/a75cb789-3935-46cd-91ec-5fb37d59fa9b"
              }
            ]
          }
        },
        "APIGatewayDomainMapping": {
          "Type": "AWS::ApiGatewayV2::ApiMapping",
          "Properties": {
            "DomainName": "app-stg.matthewcomins.com",
            "ApiId": {
              "Ref": "HttpApi"
            },
            "Stage": {
              "Ref": "HttpApiStage"
            }
          },
          "DependsOn": [
            "APIGatewayDomainName",
            "HttpApiStage"
          ]
        },
        "Route53HealthCheck": {
          "Type": "AWS::Route53::HealthCheck",
          "Properties": {
            "HealthCheckConfig": {
              "Port": 443,
              "Type": "HTTPS",
              "ResourcePath": "/health",
              "FullyQualifiedDomainName": "app-stg.matthewcomins.com",
              "RequestInterval": 30,
              "FailureThreshold": 1
            },
            "HealthCheckTags": [
              {
                "Key": "Name",
                "Value": "app-stg"
              }
            ]
          }
        },
        "Route53RecordSet": {
          "Type": "AWS::Route53::RecordSet",
          "Properties": {
            "HealthCheckId": {
              "Ref": "Route53HealthCheck"
            },
            "HostedZoneName": "matthewcomins.com.",
            "Name": "app-stg.matthewcomins.com",
            "Region": "us-east-1",
            "ResourceRecords": [
              {
                "Fn::GetAtt": [
                  "APIGatewayDomainName",
                  "RegionalDomainName"
                ]
              }
            ],
            "SetIdentifier": "app-stg-latency",
            "TTL": 30,
            "Type": "CNAME"
          }
        },
        "S3Github": {
          "Type": "AWS::S3::Bucket",
          "DeletionPolicy": "Retain",
          "Properties": {
            "BucketName": "app-stg-us-east-1-github-bucket"
          }
        },
        "S3GithubPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "S3Github"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3Github",
                      "Arn"
                    ]
                  },
                  "Principal": "*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "off",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "app",
      "configValidationMode": "off",
      "frameworkVersion": "3",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/mcomins/Sites/app/.serverless/app.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/app/stg/1726503254510-2024-09-16T16:14:14.510Z",
    "artifact": "app.zip"
  }
}